@model EshoppingV2._0.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<form action="/Product/Index">
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", id = "Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "Price" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.manufactureName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.manufactureName, new { htmlAttributes = new { @class = "form-control", id = "manufactureName" } })
                @Html.ValidationMessageFor(model => model.manufactureName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", id = "CategoryId" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2">
                <img src="@ViewBag.ImageData" width="100" height="100" />
            </div>
            <div class="col-md-10">
                Change Image : <input id="fileUpload" type="file" class="form-control" />

                <input id="btnUploadFile" type="button" value="Upload File" class="btn btn-primary" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="btnUpdate" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#btnUploadFile').on('click', function () {
            alert('Uploaded');
            var data = new FormData();
            alert(data);
            var files = $("#fileUpload").get(0).files;

            // Add the uploaded image content to the form data collection
            if (files.length > 0) {
                data.append("UploadedImage", files[0]);
            }

            // Make Ajax request with the contentType = false, and procesDate = false
            var ajaxRequest = $.ajax({
                type: "POST",
                url: "/api/Products/PostProduct",
                contentType: false,
                processData: false,
                data: data
            });

            ajaxRequest.done(function (xhr, textStatus) {
                // Do other operation
            });
        });

   $('#btnUpdate').on('click', function () {
       alert('Updating');
       var Product = {
           "Name": $("#Name").val(),
           "Description": $("#Description").val(),
           "Price": $("#Price").val(),
           "manufactureName": $("#manufactureName").val(),
           "CategoryId": $("#CategoryId").val(),
           "Id": @Request.QueryString["productId"],
       };

       

      // Make Ajax request with the contentType = false, and procesDate = false
      var ajaxRequest = $.ajax({
           type: "PUT",
           url: "/api/Products/@Request.QueryString["productId"]",
          data: JSON.stringify(Product),
          contentType: "application/json;charset=utf-8",
          success: function (data, status, xhr) {
              //alert("The result is : " + status + ": " + data);
          },
          error: function (xhr) {
              //alert(xhr.responseText);
          }
      });

      ajaxRequest.done(function (xhr, textStatus) {
                    // Do other operation
             });
   });
});
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
